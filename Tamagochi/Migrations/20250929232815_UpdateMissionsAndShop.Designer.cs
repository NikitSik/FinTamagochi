// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tamagochi.Data;

#nullable disable

namespace Tamagochi.Migrations
{
    [DbContext(typeof(TamagochiDbContext))]
    [Migration("20250929232815_UpdateMissionsAndShop")]
    partial class UpdateMissionsAndShop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tamagochi.Models.FinanceSnapshot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Income")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SavingsRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinanceSnapshots");
                });

            modelBuilder.Entity("Tamagochi.Models.Inventory", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.PrimitiveCollection<string>("OwnedPets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedPetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("Tamagochi.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductTag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Repeatable")
                        .HasColumnType("bit");

                    b.Property<int>("RewardCoins")
                        .HasColumnType("int");

                    b.Property<string>("RewardPetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RewardXp")
                        .HasColumnType("int");

                    b.Property<int>("Target")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Missions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "DEPOSIT_6M",
                            Description = "Узнай про вклад на 6–12 месяцев и кликни на продукт",
                            ProductTag = "deposit_6m",
                            Repeatable = false,
                            RewardCoins = 200,
                            RewardXp = 150,
                            Target = 1,
                            Title = "Открой вклад 6+ мес"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SAVINGS_CUSHION",
                            Description = "Накопи 1× месячных расходов (демо-цель)",
                            ProductTag = "long_savings",
                            Repeatable = true,
                            RewardCoins = 300,
                            RewardXp = 200,
                            Target = 3,
                            Title = "Финансовая подушка"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ANTIFRAUD_TUTORIAL",
                            Description = "Пройди мини-урок по антифроду",
                            ProductTag = "antifraud",
                            Repeatable = false,
                            RewardCoins = 200,
                            RewardPetId = "cat",
                            RewardXp = 120,
                            Target = 3,
                            Title = "Защита от мошенников"
                        },
                        new
                        {
                            Id = 4,
                            Code = "WEEKLY_BUDGET",
                            Description = "Составь план покупок и отметь три дня без импульсивных трат",
                            ProductTag = "weekly_budget",
                            Repeatable = true,
                            RewardCoins = 250,
                            RewardXp = 200,
                            Target = 3,
                            Title = "Неделя осознанных трат"
                        });
                });

            modelBuilder.Entity("Tamagochi.Models.MissionProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Counter")
                        .HasColumnType("int");

                    b.Property<int>("MissionId")
                        .HasColumnType("int");

                    b.Property<bool>("RewardClaimed")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MissionProgresses");
                });

            modelBuilder.Entity("Tamagochi.Models.PetProfile", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnedPetIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedPetId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("PetProfiles");
                });

            modelBuilder.Entity("Tamagochi.Models.SavingsAccount", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("SavingsAccounts");
                });

            modelBuilder.Entity("Tamagochi.Models.ShopItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<string>("PayloadJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShopItems");

                    b.HasData(
                        new
                        {
                            Id = "food_balanced_meal",
                            Enabled = true,
                            PayloadJson = "{\"satiety\":20}",
                            Price = 18,
                            Title = "Рацион \"Баланс инвестора\"",
                            Type = "food"
                        },
                        new
                        {
                            Id = "food_energy_bowl",
                            Enabled = true,
                            PayloadJson = "{\"satiety\":45}",
                            Price = 32,
                            Title = "Боул \"Энергия рынка\"",
                            Type = "food"
                        },
                        new
                        {
                            Id = "bg_city_lights",
                            Enabled = true,
                            PayloadJson = "{\"background\":\"city\"}",
                            Price = 40,
                            Title = "Фон: Городские огни",
                            Type = "bg"
                        },
                        new
                        {
                            Id = "bg_cozy_home",
                            Enabled = true,
                            PayloadJson = "{\"background\":\"cozy\"}",
                            Price = 40,
                            Title = "Фон: Домашний уют",
                            Type = "bg"
                        },
                        new
                        {
                            Id = "item_budget_planner",
                            Enabled = true,
                            PayloadJson = "{\"item\":\"planner\"}",
                            Price = 28,
                            Title = "Гаджет \"Планировщик бюджета\"",
                            Type = "item"
                        },
                        new
                        {
                            Id = "item_travel_insurance",
                            Enabled = true,
                            PayloadJson = "{\"item\":\"travel_insurance\"}",
                            Price = 35,
                            Title = "Папка \"Защита путешествий\"",
                            Type = "item"
                        });
                });

            modelBuilder.Entity("Tamagochi.Models.Tamagochi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tamagochis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Developer = "Nikita",
                            Title = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            Developer = "Nikita",
                            Title = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            Developer = "Nikita",
                            Title = "Dragon"
                        });
                });

            modelBuilder.Entity("Tamagochi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PublicId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tamagochi.Models.Wallet", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Coins")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Wallets");
                });
#pragma warning restore 612, 618
        }
    }
}
